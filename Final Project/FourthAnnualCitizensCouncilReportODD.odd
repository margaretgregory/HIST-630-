<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0"
  xmlns:sch="http://purl.oclc.org/dsdl/schematron" 
    xmlns:sqf="http://www.schematron-quickfix.com/validator/process"> <!-- allows for you to copy and paste your Schema into the ODD file -->
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>Title</title>
      </titleStmt>
      <publicationStmt>
        <p> ODD Customization for Associaton of Citizens' Councils of Mississippi:Fourth Annual Report July 1958. Created for Digital Humanities 630 Spring 2023, Texas A and M University.</p>
      </publicationStmt>
      <sourceDesc>
        <p>Association of Citizens' Councils of Mississippi, "Association of Citizens' Council of Mississippi, 4th
          Annual Report" (1958). Pamphlets and Broadsides. 6.
          https://egrove.olemiss.edu/citizens_pamph/6  University of Mississippi, eGrove</p>
      </sourceDesc>
    </fileDesc>
  </teiHeader>
  <text>
    <body>
      <schemaSpec ident="FourthAnnualCitizensCouncilReportODD" start="TEI">
        <moduleRef key="header"/>
        <moduleRef key="core" exclude="ab analytic binaryObject del email measure measureGRp media meeting postBox postCode unit catchwrods castItem castgroup castList etym floruit foliation incident incipit xr phr iNode iType interp hom exemplum damageSpandataFacet docImprint castEvent epigraph gb geogName geogFeat gi gram gramGrpfvLib flunder g handShift height heraldry hi cl climate"/> 
        <moduleRef key="tei"/>
        <moduleRef key="textstructure" exclude="div1 div2 div3 div4 div5 div6 div7"/>
        <moduleRef key="namesdates" exclude="verse spoken textcrit iso-fs analysis msdescription transcr"/> 
        <moduleRef key="msdescription" exclude="colophon custodialHist"/> 
      
        <elementSpec ident="respStmt" module="header" mode="change">
          <content>
            <sequence preserveOrder="true">
              <elementRef key="resp" minOccurs="1" maxOccurs="1"/>
              <alternate>
                <elementRef key="orgName" minOccurs="1" maxOccurs="1"/>
                <elementRef key="name" minOccurs="1" maxOccurs="1"/>
              </alternate>
            </sequence>
          </content>
        </elementSpec>
        <elementSpec ident="respStmt" module="header" mode="change">
          <content>
            <sequence preserveOrder="true">
              <elementRef key="resp" minOccurs="1" maxOccurs="1"/>
              <alternate>
                <elementRef key="persName" minOccurs="1" maxOccurs="1"/>
                <elementRef key="occupation" minOccurs="1" maxOccurs="1"/>
                <elementRef key="name" minOccurs="1" maxOccurs="1"/>
                <elementRef key="address" minOccurs="1" maxOccurs="1"/>
              </alternate>
            </sequence>
          </content>
        </elementSpec>
        
     <elementSpec module="namesdates" ident="residence" mode="change">
          <attList>
          <attDef ident="type" mode="change" usage="req">
            <datatype>
              <dataRef key="teidata.enumerated"/> 
            </datatype>
            <valList type="closed" mode="replace">
              <valItem ident="city">
                <gloss>City</gloss>
                <desc>The city in which they reside.</desc>
              </valItem>
              <valItem ident="address">
                <gloss>Address</gloss>
                <desc>The whole address of the person's residence.</desc>
              </valItem>
            </valList>
          </attDef>
        </attList> 
      </elementSpec>  
        
        
        
        <elementSpec ident="placeName" module="namesdates" mode="change">
          <content>
            <textNode/>
              
            
          </content>
          <constraintSpec ident="placeName" scheme="schematron">
          <constraint>
            
            <sch:rule context="tei:placeName/@ref">
              <sch:let name="standoff"
                value="doc('https://raw.githubusercontent.com/margaretgregory/HIST-630-/main/Final%20Project/standoffMarkup4thAnnualCitizensCouncilReport.xml')"/>
              <sch:let name="placeIDs"
                value="$standoff//tei:listPlace/tei:place/@xml:id"/> 
              <sch:let name="placeRefValues" value="for $i in $placeIDs return concat('#', $i)"/>
              <sch:let name="error" value="."/>
              <sch:assert
                test=". =$placeRefValues"
                ><sch:value-of select="$error"/> Error: Acceptable values are: 
                <sch:value-of select="string-join($placeIDs, ', ')"/>
                
              </sch:assert>
            </sch:rule>
            
          </constraint>
        </constraintSpec>
          <attList>
            <attDef ident="ref" mode="change" usage="req"/>
          </attList>
        </elementSpec>
        
        
        <elementSpec ident="persName" module="namesdates" mode="change">
          <content>
            <textNode/>
            
            
          </content>
          <constraintSpec ident="persName" scheme="schematron">
            <constraint>   
              <sch:rule context="tei:persName/@ref">
                <sch:let name="standoff"
                  value="doc('https://raw.githubusercontent.com/margaretgregory/HIST-630-/main/Final%20Project/standoffMarkup4thAnnualCitizensCouncilReport.xml')"/>
                <sch:let name="personIDs"
                  value="$standoff//tei:listPerson/tei:person/@xml:id"/>
                <sch:let name="personRefValues" value="for $i in $personIDs return concat('#', $i)"/>
                <sch:let name="error" value="."/>
                <sch:assert
                  test=". =$personRefValues"
                  ><sch:value-of select="$error"/> Error: Acceptable values are: 
                  <sch:value-of select="string-join($personIDs, ', ')"/>
                  
                </sch:assert>
              </sch:rule>
             
              
            </constraint>
          </constraintSpec>
          <attList>
            <attDef ident="ref" mode="change" usage="req"/>
          </attList>
        </elementSpec>     
        
        
        <elementSpec ident="orgName" module="namesdates" mode="change">
          <content>
            <textNode/>
            
            
          </content>
          <constraintSpec ident="orgName" scheme="schematron">
            <constraint>   
              
              <sch:rule context="tei:orgName/@ref">
              <sch:let name="standoff"
                value="doc('https://raw.githubusercontent.com/margaretgregory/HIST-630-/main/Final%20Project/standoffMarkup4thAnnualCitizensCouncilReport.xml')"/>
              <sch:let name="orgIDs"
                value="$standoff//tei:listOrg/tei:org/@xml:id"/> 
              <sch:let name="orgRefValues" value="for $i in $orgIDs return concat('#', $i)"/>
              <sch:let name="error" value="."/>
              <sch:assert
                test=". =$orgRefValues"
                ><sch:value-of select="$error"/> Error: Acceptable values are: 
                <sch:value-of select="string-join($orgIDs, ', ')"/>
                
              </sch:assert>
              </sch:rule>
             
        
            </constraint>
          </constraintSpec>
          <attList>
            <attDef ident="ref" mode="change" usage="req"/>
          </attList>
        </elementSpec>     
        
        
        
        
      </schemaSpec> 
    </body>
  </text>
</TEI>
